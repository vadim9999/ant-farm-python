{"version":3,"sources":["types/index.tsx","pages/Home/CreatePicture/CreatePicture.tsx","pages/Home/StreamingControls/StreamingControls.tsx","api/api.tsx","utils/utils.tsx","pages/Home/VideoPlayer/VideoPlayer.tsx","pages/Home/VideoRecording/VideoRecording.tsx","pages/Home/Home.tsx","Router.tsx","AppLayout.tsx","reportWebVitals.ts","index.tsx"],"names":["VideoResolution","Option","Select","CreatePicture","placeholder","style","width","defaultValue","value","type","icon","CameraOutlined","size","StreamingControls","PlayCircleOutlined","danger","PauseOutlined","disabled","API_URL","getUserId","str","replace","VideoPlayer","location","useLocation","useReducer","prevState","nextState","imageUrl","isStartedPreview","currentResolution","Q480","state","setState","console","log","search","userId","onStartPreview","resolution","axios","post","headers","startPreview","then","streamUrl","onStopPreview","get","stopPreview","menu","selectedKeys","onClick","e","setTimeout","key","Item","Q720","Q240","className","id","src","height","alt","overlay","trigger","placement","SettingOutlined","FullscreenOutlined","fullScreen","document","getElementById","webkitRequestFullScreen","webkitFullscreenElement","webkitCancelFullScreen","image","setAttribute","VideoRecording","Home","Router","exact","path","Header","Layout","Sider","Content","AppLayout","overflow","position","bottom","left","mode","defaultSelectedKeys","defaultOpenKeys","padding","marginLeft","margin","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b40410ad.chunk.js","sourcesContent":["export enum VideoResolution {\n  Q720 = \"1280x720\",\n  Q480 = \"854x480\",\n  Q240 = \"426x240\",\n}\n","import { CameraOutlined } from \"@ant-design/icons\";\nimport { Button, Input, Select } from \"antd\";\nimport React from \"react\";\n\nconst { Option } = Select;\n\nconst CreatePicture = () => {\n  return (\n    <div>\n      <Input placeholder=\"Ім'я відеофайлу\" style={{ width: 400 }} />\n      <Select\n        defaultValue=\"854x480\"\n        style={{ width: 120 }}\n        // onChange={handleChange}\n      >\n        <Option value=\"1280x720\">1280x720</Option>\n        <Option value=\"854x480\">854x480</Option>\n        <Option value=\"426x240\">426x240</Option>\n      </Select>\n      <Button type=\"primary\" icon={<CameraOutlined />} size=\"large\">\n        Створити зображення\n      </Button>\n    </div>\n  );\n};\n\nexport default CreatePicture;\n","import {\n  PauseOutlined,\n  PlayCircleOutlined,\n  SettingOutlined,\n} from \"@ant-design/icons\";\nimport { Button, Dropdown, Menu, Select } from \"antd\";\nimport React from \"react\";\n\nconst { Option } = Select;\n\nconst StreamingControls = () => {\n  return (\n    <div>\n      <Button type=\"primary\" icon={<PlayCircleOutlined />} size=\"large\">\n        Почати трансляцію\n      </Button>\n\n      <Button\n        type=\"primary\"\n        danger\n        icon={<PauseOutlined />}\n        size=\"large\"\n        disabled\n      >\n        Зупинити трансляцію\n      </Button>\n      <Select\n        defaultValue=\"480\"\n        style={{ width: 120 }}\n        // onChange={handleChange}\n      >\n        <Option value=\"720\">740</Option>\n        <Option value=\"480\">480</Option>\n        <Option value=\"240\">240</Option>\n      </Select>\n    </div>\n  );\n};\n\nexport default StreamingControls;\n","import axios from \"axios\";\nimport { VideoResolution } from \"types\";\n\n// const API_URL = document.location.protocol + \"//\" + document.location.host;\nexport const API_URL = \"http://raspberrypi.local\";\ninterface StartPreview {\n  userId: string;\n  resolution: VideoResolution;\n}\n\ninterface StopPreview {\n  userId: string;\n}\n\nexport const startPreview = ({ userId, resolution }: StartPreview) =>\n  axios.post(`${API_URL}/start?id=${userId}`, resolution, {\n    headers: {\n      // Accept: \"*/*\",\n      // \"Access-Control-Allow-Origin\": \"*\",\n      \"Content-Type\": \"text/plain\",\n      // mode: \"no-cors\",\n    },\n  });\n\nexport const stopPreview = ({ userId }: StopPreview) =>\n  axios.get(`${API_URL}/stop?id=${userId}`);\n\n// axios({\n//   headers: {\n//     Accept: \"*/*\",\n//     \"Access-Control-Allow-Origin\": \"*\",\n//     \"Content-Type\": \"text/plain;charset=UTF-8\",\n//     mode: \"no-cors\",\n//   },\n//   url: `${API_URL}/start?id=${userId}`,\n//   method: \"POST\",\n//   data: \"854x480\",\n// });\n","export const getUserId = (str: string) => str.replace(\"?id=\", \"\");\n","import React, { useReducer, useState } from \"react\";\nimport { Button, Dropdown, Menu, MenuProps } from \"antd\";\nimport {\n  BorderOutlined,\n  FullscreenOutlined,\n  PauseCircleOutlined,\n  PauseOutlined,\n  PlayCircleOutlined,\n  SettingOutlined,\n} from \"@ant-design/icons\";\nimport \"./index.scss\";\n\nimport { API_URL, startPreview, stopPreview } from \"api/api\";\nimport { useLocation, useParams, useRouteMatch } from \"react-router\";\nimport { getUserId } from \"utils/utils\";\nimport { VideoResolution } from \"types\";\n\ninterface State {\n  imageUrl: string;\n  isStartedPreview: boolean;\n  currentResolution: VideoResolution;\n}\n\nconst VideoPlayer = () => {\n  const location = useLocation();\n  const match = useLocation();\n  const [state, setState] = useReducer(\n    (prevState: State, nextState: Partial<State>): State => ({\n      ...prevState,\n      ...nextState,\n    }),\n    {\n      imageUrl: \"\",\n      isStartedPreview: false,\n      currentResolution: VideoResolution.Q480,\n    }\n  );\n  console.log(\"location\", getUserId(location.search));\n\n  const userId = getUserId(location.search);\n\n  const onFullScreen = () => {\n    var fullScreen = document.getElementById(\"fullScreen\");\n\n    // @ts-ignoreignore\n    fullScreen?.webkitRequestFullScreen();\n    // @ts-ignoreignore\n    if (document?.webkitFullscreenElement) {\n      // @ts-ignoreignore\n      document.webkitCancelFullScreen();\n      var image = document.getElementById(\"badge\");\n      image?.setAttribute(\"width\", \"640\");\n      image?.setAttribute(\"height\", \"480\");\n    } else {\n      // @ts-ignoreignore\n      fullScreen?.webkitRequestFullScreen();\n      const image = document.getElementById(\"badge\");\n      image?.setAttribute(\"width\", \"100%\");\n      image?.setAttribute(\"height\", \"100%\");\n    }\n  };\n\n  const onStartPreview =\n    ({ resolution }: { resolution: VideoResolution }) =>\n    () => {\n      startPreview({ userId, resolution }).then(() => {\n        const streamUrl = `${API_URL}/stream.mjpg?id=${userId}`;\n\n        setState({\n          imageUrl: streamUrl,\n          isStartedPreview: true,\n        });\n      });\n    };\n\n  const onStopPreview = () => {\n    return stopPreview({ userId }).then(() => {\n      setState({\n        imageUrl: \"\",\n        isStartedPreview: false,\n      });\n    });\n  };\n\n  const onChangeQuality: MenuProps[\"onClick\"] = (e) => {\n    if (state.isStartedPreview) {\n      onStopPreview().then(() => {\n        setTimeout(function () {\n          onStartPreview({ resolution: e.key as VideoResolution })();\n        }, 1000);\n      });\n    }\n    console.log(\"e\", e.key);\n    setState({ currentResolution: e.key as VideoResolution });\n  };\n\n  const menu = (\n    <Menu selectedKeys={[state.currentResolution]} onClick={onChangeQuality}>\n      <Menu.Item key={VideoResolution.Q720}>720 HD</Menu.Item>\n      <Menu.Item key={VideoResolution.Q480}>480</Menu.Item>\n      <Menu.Item key={VideoResolution.Q240}>240</Menu.Item>\n    </Menu>\n  );\n\n  return (\n    <div className=\"videoPlayer\">\n      <div id=\"fullScreen\">\n        {state.imageUrl && (\n          <img\n            id=\"badge\"\n            src={state.imageUrl}\n            width=\"640\"\n            height=\"480\"\n            alt=\"Video\"\n          />\n        )}\n        <div className=\"controls\">\n          <div>\n            <Button\n              type=\"primary\"\n              icon={<PlayCircleOutlined />}\n              size=\"large\"\n              onClick={onStartPreview({ resolution: state.currentResolution })}\n              disabled={state.isStartedPreview}\n            />\n\n            <Button\n              type=\"primary\"\n              danger\n              icon={<PauseOutlined />}\n              size=\"large\"\n              onClick={onStopPreview}\n              disabled={!state.isStartedPreview}\n            />\n          </div>\n          <div>\n            <Dropdown overlay={menu} trigger={[\"click\"]} placement=\"topCenter\">\n              <Button type=\"primary\" icon={<SettingOutlined />} size=\"large\" />\n            </Dropdown>\n            <Button\n              type=\"primary\"\n              icon={<FullscreenOutlined />}\n              size=\"large\"\n              onClick={onFullScreen}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default VideoPlayer;\n","import { PauseOutlined, PlayCircleOutlined } from \"@ant-design/icons\";\nimport { Button, Input, Select } from \"antd\";\nimport React from \"react\";\n\nconst { Option } = Select;\n\nconst VideoRecording = () => {\n  return (\n    <div>\n      <Input placeholder=\"Ім'я відеофайлу\" style={{ width: 400 }} />\n      <Select\n        defaultValue=\"480\"\n        style={{ width: 120 }}\n        // onChange={handleChange}\n      >\n        <Option value=\"720\">740</Option>\n        <Option value=\"480\">480</Option>\n        <Option value=\"240\">240</Option>\n      </Select>\n      <Button type=\"primary\" icon={<PlayCircleOutlined />} size=\"large\">\n        Почати запис\n      </Button>\n      <Button\n        type=\"primary\"\n        danger\n        icon={<PauseOutlined />}\n        size=\"large\"\n        disabled\n      >\n        Зупинити запис\n      </Button>\n    </div>\n  );\n};\n\nexport default VideoRecording;\n","import React from \"react\";\nimport CreatePicture from \"./CreatePicture/CreatePicture\";\nimport StreamingControls from \"./StreamingControls/StreamingControls\";\nimport VideoPlayer from \"./VideoPlayer/VideoPlayer\";\nimport VideoRecording from \"./VideoRecording/VideoRecording\";\n\nconst Home = () => {\n  return (\n    <div>\n      <VideoPlayer />\n      <StreamingControls />\n      <VideoRecording />\n      <CreatePicture />\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route, Link } from \"react-router-dom\";\nimport Home from \"pages/Home/Home\";\n\nconst Router = () => {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/index.html\">\n          <Home />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default Router;\n","import React from \"react\";\nimport { Layout, Menu } from \"antd\";\nimport Router from \"Router\";\nimport \"antd/dist/antd.css\";\n\nconst { Header, Sider, Content } = Layout;\n\nconst AppLayout = () => {\n  return (\n    <Layout>\n      <Header\n        className=\"header\"\n        // style={{ position: \"fixed\", zIndex: 1, width: \"100%\" }}\n      >\n        <div className=\"logo\" />\n        Header\n      </Header>\n      <Layout className=\"site-layout\">\n        <Sider\n          width={200}\n          className=\"site-layout-background\"\n          style={{\n            overflow: \"auto\",\n            height: \"calc(100vh - 64px)\",\n            // marginTop: '64px',\n            position: \"fixed\",\n            bottom: 0,\n            left: 0,\n          }}\n        >\n          <Menu\n            mode=\"inline\"\n            defaultSelectedKeys={[\"1\"]}\n            defaultOpenKeys={[\"sub1\"]}\n            // style={{ height: \"100%\", borderRight: 0 }}\n          >\n            <Menu.Item key=\"1\">Моніторинг</Menu.Item>\n            <Menu.Item key=\"2\">Відеотрансляція</Menu.Item>\n            <Menu.Item key=\"3\">Медіафайли</Menu.Item>\n            <Menu.Item key=\"4\">Налаштування</Menu.Item>\n          </Menu>\n        </Sider>\n\n        <Layout style={{ padding: \"0 24px 24px\", marginLeft: '200px' }}>\n          <Content\n            className=\"site-layout-background\"\n            style={{\n              padding: 24,\n              margin: 0,\n              // minHeight: 280,\n            }}\n          >\n            <Router />\n          </Content>\n        </Layout>\n      </Layout>\n    </Layout>\n  );\n};\n\nexport default AppLayout;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import AppLayout from \"AppLayout\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import \"./index.css\";\nimport Router from \"Router\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppLayout />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}