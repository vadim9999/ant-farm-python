{"version":3,"sources":["types/index.tsx","context/GlobalContextComponent.tsx","pages/Home/CreatePicture/CreatePictureForm/CreatePictureForm.tsx","api/api.tsx","utils/utils.tsx","pages/Home/CreatePicture/CreatePicture.tsx","pages/Home/StreamingControls/StreamingForm/StreamingForm.tsx","pages/Home/StreamingControls/StreamingControls.tsx","pages/Home/VideoPlayer/VideoPlayer.tsx","pages/Home/VideoRecording/ButtonStopTimer/ButtonStopTimer.tsx","pages/Home/VideoRecording/VideoRecordingForm/VideoRecordingForm.tsx","pages/Home/VideoRecording/VideoRecording.tsx","pages/Home/Home.tsx","Router.tsx","AppLayout.tsx","reportWebVitals.ts","index.tsx"],"names":["VideoResolution","GlobalContext","React","createContext","globalState","isRecording","isStartedPreview","isStreaming","dispatch","GlobalContextComponent","children","useReducer","prevGlobalState","nextGlobalState","contextValue","useMemo","Provider","value","CreatePictureForm","onCancel","onSubmit","Form","useForm","form","locales","initialValuesForm","quality","Q480","name","initialValues","onFinish","Item","label","rules","required","message","style","width","Option","Q720","Q240","justify","xs","type","onClick","block","htmlType","API_URL","document","location","protocol","hostname","getUserId","str","replace","CreatePicture","Select","useContext","useLocation","useState","isModalVisible","setIsModalVisible","userId","search","onCloseModal","icon","CameraOutlined","size","disabled","title","centered","visible","footer","destroyOnClose","values","resolution","filename","axios","post","JSON","stringify","takePicture","StreamingForm","StreamingControls","danger","PauseOutlined","PlayCircleOutlined","VideoPlayer","console","log","prevState","nextState","imageUrl","currentResolution","state","setState","onStartPreview","startPreview","then","streamUrl","onStopPreview","get","stopPreview","menu","selectedKeys","e","setTimeout","key","className","id","src","height","alt","overlay","trigger","placement","SettingOutlined","FullscreenOutlined","fullScreen","getElementById","webkitRequestFullScreen","webkitFullscreenElement","webkitCancelFullScreen","image","setAttribute","ButtonStopTimer","onStopRecording","startedTime","dayjs","diffTimeInSeconds","useEffect","timer","setInterval","diff","clearInterval","hours","Math","floor","minutes","seconds","VideoRecordingForm","placeholder","VideoRecording","stopRecording","startRecording","Home","Router","exact","path","component","Header","Layout","Sider","Content","AppLayout","overflow","position","bottom","left","mode","defaultSelectedKeys","defaultOpenKeys","padding","marginLeft","margin","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.fbb26d2f.chunk.js","sourcesContent":["export enum VideoResolution {\n  Q720 = \"1280x720\",\n  Q480 = \"854x480\",\n  Q240 = \"426x240\",\n}\n","import React, { createContext, useMemo, useReducer } from \"react\";\n\ninterface GlobalState {\n  isRecording: boolean;\n  isStartedPreview: boolean;\n  isStreaming: boolean;\n}\n\ninterface ICreateContext {\n  globalState: GlobalState;\n  dispatch: React.Dispatch<Partial<GlobalState>>;\n}\n\nexport const GlobalContext = React.createContext<ICreateContext>({\n  globalState: {\n    isRecording: false,\n    isStartedPreview: false,\n    isStreaming: false,\n  },\n  dispatch: () => {},\n});\n\ninterface IGlobalContextComponent {\n  children: React.ReactNode;\n}\n\n// TODO find better name\nconst GlobalContextComponent = ({ children }: IGlobalContextComponent) => {\n  const [globalState, dispatch] = useReducer(\n    (\n      prevGlobalState: GlobalState,\n      nextGlobalState: Partial<GlobalState>\n    ): GlobalState => ({\n      ...prevGlobalState,\n      ...nextGlobalState,\n    }),\n    {\n      isRecording: false,\n      isStartedPreview: false,\n      isStreaming: false,\n    }\n  );\n  const contextValue = useMemo(() => {\n    return { globalState, dispatch };\n  }, [globalState, dispatch]);\n\n  return (\n    <GlobalContext.Provider value={contextValue}>\n      {children}\n    </GlobalContext.Provider>\n  );\n};\n\nexport default GlobalContextComponent;\n","import React from \"react\";\nimport { Button, Col, Form, Input, Row, Select } from \"antd\";\nimport { VideoResolution } from \"types\";\nimport { Props } from \"./typesCreatePictureForm\";\n\nconst CreatePictureForm = ({ onCancel, onSubmit }: Props) => {\n  const [form] = Form.useForm();\n\n  const locales = {\n    filename: \"Назва зображення\",\n    quality: \"Якість зображення\",\n  };\n\n  const initialValuesForm = { quality: VideoResolution.Q480 };\n\n  const schema = {\n    filename: { required: true, message: \"Введіть назву зображення\" },\n  };\n\n  return (\n    <Form\n      form={form}\n      name=\"createPictureForm\"\n      initialValues={initialValuesForm}\n      onFinish={onSubmit}\n    >\n      <Form.Item\n        name=\"filename\"\n        label={locales.filename}\n        rules={[schema.filename]}\n      >\n        <Input style={{ width: 400 }} />\n      </Form.Item>\n      <Form.Item name=\"quality\" label={locales.quality}>\n        <Select style={{ width: 120 }}>\n          <Select.Option value={VideoResolution.Q720}>1280x720</Select.Option>\n          <Select.Option value={VideoResolution.Q480}>854x480</Select.Option>\n          <Select.Option value={VideoResolution.Q240}>426x240</Select.Option>\n        </Select>\n      </Form.Item>\n\n      <Form.Item>\n        <Row justify=\"space-between\">\n          <Col xs={11}>\n            <Button type=\"default\" onClick={onCancel} block>\n              {/* TODO move to locales */}\n              Cancel\n            </Button>\n          </Col>\n          <Col xs={11}>\n            <Button type=\"primary\" htmlType=\"submit\" block>\n              Submit\n            </Button>\n          </Col>\n        </Row>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default CreatePictureForm;\n","import axios from \"axios\";\nimport { VideoResolution } from \"types\";\nimport {\n  StartPreview,\n  StartRecording,\n  StopPreview,\n  StopRecording,\n  TakePicture,\n} from \"./types\";\n\nexport const API_URL = `${document.location.protocol}\"//\"${document.location.hostname}:8000`;\n// export const API_URL = \"http://raspberrypi.local\";\n\n// {\n//   headers: {\n//     // Accept: \"*/*\",\n//     // \"Access-Control-Allow-Origin\": \"*\",\n//     \"Content-Type\": \"text/plain\",\n//     // mode: \"no-cors\",\n//   },\n// }\n\nexport const startPreview = ({ userId, resolution }: StartPreview) =>\n  axios.post(`${API_URL}/start?id=${userId}`, resolution);\n\nexport const stopPreview = ({ userId }: StopPreview) =>\n  axios.get(`${API_URL}/stop?id=${userId}`);\n\nexport const startRecording = ({\n  userId,\n  resolution,\n  filename,\n}: StartRecording) =>\n  axios.post(\n    `${API_URL}/start_record?id=${userId}`,\n    JSON.stringify({ resolution, filename })\n    // { timeout: 10000 }\n  );\n\nexport const stopRecording = ({ userId }: StopRecording) =>\n  axios.get(`${API_URL}/stop_record?id=${userId}`);\n\nexport const takePicture = ({ resolution, filename, userId }: TakePicture) =>\n  axios.post(\n    `${API_URL}/capture_image?id=${userId}`,\n    JSON.stringify({ resolution, filename })\n  );\n\n// axios({\n//   headers: {\n//     Accept: \"*/*\",\n//     \"Access-Control-Allow-Origin\": \"*\",\n//     \"Content-Type\": \"text/plain;charset=UTF-8\",\n//     mode: \"no-cors\",\n//   },\n//   url: `${API_URL}/start?id=${userId}`,\n//   method: \"POST\",\n//   data: \"854x480\",\n// });\n","export const getUserId = (str: string) => str.replace(\"?id=\", \"\");\n","import { CameraOutlined } from \"@ant-design/icons\";\nimport { Button, Input, Modal, Select } from \"antd\";\nimport { GlobalContext } from \"context/GlobalContextComponent\";\nimport React, { useContext, useState } from \"react\";\nimport CreatePictureForm from \"./CreatePictureForm/CreatePictureForm\";\nimport { FormValues } from \"./CreatePictureForm/typesCreatePictureForm\";\nimport { takePicture } from \"api/api\";\nimport { getUserId } from \"utils/utils\";\nimport { useLocation } from \"react-router\";\n\nconst { Option } = Select;\n\nconst CreatePicture = () => {\n  const { globalState } = useContext(GlobalContext);\n  const location = useLocation();\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const locales = {\n    createImage: \"Створити зображення\",\n  };\n\n  const userId = getUserId(location.search);\n\n  const onCloseModal = () => {\n    setIsModalVisible(false);\n  };\n\n  const onSubmitModal = (values: FormValues) => {\n    takePicture({\n      resolution: values.quality,\n      filename: values.filename,\n      userId,\n    });\n\n    setIsModalVisible(false);\n  };\n\n  const onOpenModal = () => {\n    setIsModalVisible(true);\n  };\n\n  return (\n    <div>\n      <Button\n        type=\"primary\"\n        icon={<CameraOutlined />}\n        onClick={onOpenModal}\n        size=\"large\"\n        disabled={!globalState.isStartedPreview}\n      >\n        {locales.createImage}\n      </Button>\n\n      <Modal\n        title={locales.createImage}\n        centered\n        visible={isModalVisible}\n        footer={null}\n        onCancel={onCloseModal}\n        destroyOnClose\n      >\n        <CreatePictureForm onSubmit={onSubmitModal} onCancel={onCloseModal} />\n      </Modal>\n    </div>\n  );\n};\n\nexport default CreatePicture;\n","import { Button, Col, Form, Row, Select } from \"antd\";\nimport React from \"react\";\nimport { VideoResolution } from \"types\";\nimport { Props } from \"./typesStreamingForm\";\n\nexport const StreamingForm = ({ onCancel, onSubmit }: Props) => {\n  const [form] = Form.useForm();\n\n  const locales = {\n    quality: \"Якість зображення\",\n  };\n\n  return (\n    <Form form={form} name=\"streamingForm\" onFinish={onSubmit}>\n      <Form.Item name=\"quality\" label={locales.quality}>\n        <Select style={{ width: 120 }}>\n          <Select.Option value={VideoResolution.Q720}>1280x720</Select.Option>\n          <Select.Option value={VideoResolution.Q480}>854x480</Select.Option>\n          <Select.Option value={VideoResolution.Q240}>426x240</Select.Option>\n        </Select>\n      </Form.Item>\n      <Form.Item>\n        <Row justify=\"space-between\">\n          <Col xs={11}>\n            <Button type=\"default\" onClick={onCancel} block>\n              {/* TODO move to locales */}\n              Cancel\n            </Button>\n          </Col>\n          <Col xs={11}>\n            <Button type=\"primary\" htmlType=\"submit\" block>\n              Submit\n            </Button>\n          </Col>\n        </Row>\n      </Form.Item>\n    </Form>\n  );\n};\n","import {\n  PauseOutlined,\n  PlayCircleOutlined,\n  SettingOutlined,\n} from \"@ant-design/icons\";\nimport { Button, Dropdown, Menu, Modal, Select } from \"antd\";\nimport { GlobalContext } from \"context/GlobalContextComponent\";\nimport React, { useContext, useState } from \"react\";\nimport { StreamingForm } from \"./StreamingForm/StreamingForm\";\n\nconst { Option } = Select;\n\nconst StreamingControls = () => {\n  const { globalState } = useContext(GlobalContext);\n  const [isModalVisible, setIsModalVisible] = useState(false);\n\n  const locales = {\n    startStreaming: \"Почати трансляцію\",\n  };\n\n  const onCloseModal = () => {\n    setIsModalVisible(false);\n  };\n\n  const onSubmitModal = () => {\n    setIsModalVisible(false);\n  };\n\n  return (\n    <div>\n      {globalState.isStreaming ? (\n        <Button\n          type=\"primary\"\n          danger\n          icon={<PauseOutlined />}\n          size=\"large\"\n          disabled\n        >\n          Зупинити трансляцію\n        </Button>\n      ) : (\n        <Button\n          type=\"primary\"\n          icon={<PlayCircleOutlined />}\n          disabled={!globalState.isStartedPreview}\n          size=\"large\"\n        >\n          {locales.startStreaming}\n        </Button>\n      )}\n\n      <Modal\n        title={locales.startStreaming}\n        centered\n        visible={isModalVisible}\n        footer={null}\n        onCancel={onCloseModal}\n        destroyOnClose\n      >\n        <StreamingForm onSubmit={onSubmitModal} onCancel={onCloseModal} />\n      </Modal>\n    </div>\n  );\n};\n\nexport default StreamingControls;\n","import React, { useContext, useReducer, useState } from \"react\";\nimport { Button, Dropdown, Menu, MenuProps } from \"antd\";\nimport {\n  BorderOutlined,\n  FullscreenOutlined,\n  PauseCircleOutlined,\n  PauseOutlined,\n  PlayCircleOutlined,\n  SettingOutlined,\n} from \"@ant-design/icons\";\nimport \"./index.scss\";\n\nimport { API_URL, startPreview, stopPreview } from \"api/api\";\nimport { useLocation, useParams, useRouteMatch } from \"react-router\";\nimport { getUserId } from \"utils/utils\";\nimport { VideoResolution } from \"types\";\nimport { GlobalContext } from \"context/GlobalContextComponent\";\nimport { State } from \"./typesVideoPlayer\";\n\nconst VideoPlayer = () => {\n  const { globalState, dispatch } = useContext(GlobalContext);\n  console.log(\"globalContext\", globalState);\n\n  const location = useLocation();\n  const match = useLocation();\n  const [state, setState] = useReducer(\n    (prevState: State, nextState: Partial<State>): State => ({\n      ...prevState,\n      ...nextState,\n    }),\n    {\n      imageUrl: \"\",\n      currentResolution: VideoResolution.Q480,\n    }\n  );\n  console.log(\"location\", getUserId(location.search));\n\n  const userId = getUserId(location.search);\n\n  const onFullScreen = () => {\n    var fullScreen = document.getElementById(\"fullScreen\");\n\n    // @ts-ignoreignore\n    fullScreen?.webkitRequestFullScreen();\n    // @ts-ignoreignore\n    if (document?.webkitFullscreenElement) {\n      // @ts-ignoreignore\n      document.webkitCancelFullScreen();\n      var image = document.getElementById(\"badge\");\n      image?.setAttribute(\"width\", \"640\");\n      image?.setAttribute(\"height\", \"480\");\n    } else {\n      // @ts-ignoreignore\n      fullScreen?.webkitRequestFullScreen();\n      const image = document.getElementById(\"badge\");\n      image?.setAttribute(\"width\", \"100%\");\n      image?.setAttribute(\"height\", \"100%\");\n    }\n  };\n\n  const onStartPreview =\n    ({ resolution }: { resolution: VideoResolution }) =>\n    () => {\n      startPreview({ userId, resolution }).then(() => {\n        const streamUrl = `${API_URL}/stream.mjpg?id=${userId}`;\n\n        setState({\n          imageUrl: streamUrl,\n        });\n        dispatch({ isStartedPreview: true });\n      });\n    };\n\n  const onStopPreview = () => {\n    return stopPreview({ userId }).then(() => {\n      setState({\n        imageUrl: \"\",\n      });\n      dispatch({ isStartedPreview: false });\n    });\n  };\n\n  const onChangeQuality: MenuProps[\"onClick\"] = (e) => {\n    if (globalState.isStartedPreview) {\n      onStopPreview().then(() => {\n        setTimeout(function () {\n          onStartPreview({ resolution: e.key as VideoResolution })();\n        }, 1000);\n      });\n    }\n    console.log(\"e\", e.key);\n    setState({ currentResolution: e.key as VideoResolution });\n  };\n\n  const menu = (\n    <Menu selectedKeys={[state.currentResolution]} onClick={onChangeQuality}>\n      <Menu.Item key={VideoResolution.Q720}>720 HD</Menu.Item>\n      <Menu.Item key={VideoResolution.Q480}>480</Menu.Item>\n      <Menu.Item key={VideoResolution.Q240}>240</Menu.Item>\n    </Menu>\n  );\n\n  return (\n    <div className=\"videoPlayer\">\n      <div id=\"fullScreen\">\n        {state.imageUrl && (\n          <img\n            id=\"badge\"\n            src={state.imageUrl}\n            width=\"640\"\n            height=\"480\"\n            alt=\"Video\"\n          />\n        )}\n        <div className=\"controls\">\n          <div>\n            <Button\n              type=\"primary\"\n              icon={<PlayCircleOutlined />}\n              size=\"large\"\n              onClick={onStartPreview({ resolution: state.currentResolution })}\n              disabled={globalState.isStartedPreview || globalState.isRecording}\n            />\n\n            <Button\n              type=\"primary\"\n              danger\n              icon={<PauseOutlined />}\n              size=\"large\"\n              onClick={onStopPreview}\n              disabled={\n                !globalState.isStartedPreview || globalState.isRecording\n              }\n            />\n          </div>\n          <div>\n            <Dropdown\n              overlay={menu}\n              disabled={globalState.isRecording}\n              trigger={[\"click\"]}\n              placement=\"topCenter\"\n            >\n              <Button type=\"primary\" icon={<SettingOutlined />} size=\"large\" />\n            </Dropdown>\n            <Button\n              type=\"primary\"\n              icon={<FullscreenOutlined />}\n              size=\"large\"\n              onClick={onFullScreen}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default VideoPlayer;\n","import React, { useEffect, useState } from \"react\";\nimport { PauseOutlined } from \"@ant-design/icons\";\nimport { Button } from \"antd\";\nimport dayjs, { Dayjs } from \"dayjs\";\nimport { Props } from \"./typesButtonStopTimer\";\n\nconst ButtonStopTimer = ({ onStopRecording }: Props) => {\n  const [state, setState] = useState<{\n    startedTime: Dayjs;\n    diffTimeInSeconds: number;\n  }>({ startedTime: dayjs(), diffTimeInSeconds: 0 });\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setState({\n        ...state,\n        diffTimeInSeconds: dayjs().diff(state.startedTime, \"seconds\"),\n      });\n    }, 1000);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n\n  const hours = Math.floor(state.diffTimeInSeconds / 3600);\n  const minutes =\n    Math.floor(state.diffTimeInSeconds / 60) >= 60\n      ? Math.floor(state.diffTimeInSeconds / 60) - hours * 60\n      : Math.floor(state.diffTimeInSeconds / 60);\n\n  const seconds = state.diffTimeInSeconds - minutes * 60;\n\n  return (\n    <Button\n      type=\"primary\"\n      danger\n      icon={<PauseOutlined />}\n      size=\"large\"\n      onClick={onStopRecording}\n    >\n      Зупинити запис {(hours < 10 ? \"0\" : \"\") + hours}:\n      {(minutes < 10 ? \"0\" : \"\") + minutes}:\n      {(seconds < 10 ? \"0\" : \"\") + seconds}\n    </Button>\n  );\n};\n\nexport default ButtonStopTimer;\n","import { Button, Col, Form, Input, Row, Select, Space } from \"antd\";\nimport React from \"react\";\nimport { VideoResolution } from \"types\";\nimport { Props } from \"./types\";\n\nconst { Option } = Select;\n\nconst VideoRecordingForm = ({ onSubmit, onCancel }: Props) => {\n  const [form] = Form.useForm();\n\n  const schema = {\n    fileName: { required: true, message: \"Введіть назву відеофайлу\" },\n  };\n\n  return (\n    <Form\n      form={form}\n      name=\"videoRecordingForm\"\n      onFinish={onSubmit}\n      initialValues={{ quality: VideoResolution.Q480 }}\n    >\n      <Form.Item label=\"File name\" name=\"filename\" rules={[schema.fileName]}>\n        <Input placeholder=\"Ім'я відеофайлу\" style={{ width: 400 }} />\n      </Form.Item>\n      <Form.Item label=\"Quality\" name=\"quality\">\n        <Select style={{ width: 120 }}>\n          <Option value={VideoResolution.Q720}>740</Option>\n          <Option value={VideoResolution.Q480}>480</Option>\n          <Option value={VideoResolution.Q240}>240</Option>\n        </Select>\n      </Form.Item>\n\n      <Form.Item>\n        <Row justify=\"space-between\">\n          <Col xs={11}>\n            <Button type=\"default\" onClick={onCancel} block>\n              Cancel\n            </Button>\n          </Col>\n          <Col xs={11}>\n            <Button type=\"primary\" htmlType=\"submit\" block>\n              Submit\n            </Button>\n          </Col>\n        </Row>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default VideoRecordingForm;\n","import React, { useContext, useState } from \"react\";\nimport { PauseOutlined, PlayCircleOutlined } from \"@ant-design/icons\";\nimport { Button, Input, Modal, Select } from \"antd\";\nimport { startRecording, stopRecording } from \"api/api\";\nimport { GlobalContext } from \"context/GlobalContextComponent\";\nimport { useLocation } from \"react-router\";\nimport { getUserId } from \"utils/utils\";\nimport ButtonStopTimer from \"./ButtonStopTimer/ButtonStopTimer\";\nimport { FormValues } from \"./VideoRecordingForm/types\";\nimport VideoRecordingForm from \"./VideoRecordingForm/VideoRecordingForm\";\n\nconst VideoRecording = () => {\n  const { dispatch, globalState } = useContext(GlobalContext);\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const location = useLocation();\n  const userId = getUserId(location.search);\n\n  const onOpenModal = () => {\n    console.log(\"click\");\n\n    setIsModalVisible(true);\n  };\n\n  const onSubmitModal = (values: FormValues) => {\n    console.log(\"data\", values);\n\n    startRecording({\n      userId,\n      resolution: values.quality,\n      filename: values.filename,\n    });\n    // (() => {\n    dispatch({ isRecording: true });\n    setIsModalVisible(false);\n    // });\n  };\n\n  const onCloseModal = () => {\n    setIsModalVisible(false);\n  };\n\n  const onStopRecording = () => {\n    stopRecording({ userId }).then(() => {\n      dispatch({ isRecording: false });\n    });\n  };\n\n  // TODO move text of buttons into object\n  // TODO add timer in button\n  return (\n    <div>\n      {globalState.isRecording ? (\n        <ButtonStopTimer onStopRecording={onStopRecording} />\n      ) : (\n        <Button\n          type=\"primary\"\n          icon={<PlayCircleOutlined />}\n          onClick={onOpenModal}\n          size=\"large\"\n          disabled={!globalState.isStartedPreview}\n        >\n          Почати запис\n        </Button>\n      )}\n\n      <Modal\n        title=\"Відеозапис\"\n        centered\n        visible={isModalVisible}\n        footer={null}\n        onCancel={onCloseModal}\n        destroyOnClose\n      >\n        <VideoRecordingForm onSubmit={onSubmitModal} onCancel={onCloseModal} />\n      </Modal>\n    </div>\n  );\n};\n\nexport default VideoRecording;\n","import React, {\n  createContext,\n  useContext,\n  useMemo,\n  useReducer,\n  useState,\n} from \"react\";\nimport GlobalContext from \"context/GlobalContextComponent\";\nimport CreatePicture from \"./CreatePicture/CreatePicture\";\nimport StreamingControls from \"./StreamingControls/StreamingControls\";\nimport VideoPlayer from \"./VideoPlayer/VideoPlayer\";\nimport VideoRecording from \"./VideoRecording/VideoRecording\";\n\nconst Home = () => {\n  return (\n    <div>\n      <VideoPlayer />\n      <StreamingControls />\n      <VideoRecording />\n      <CreatePicture />\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route, Link, Redirect } from \"react-router-dom\";\nimport Home from \"pages/Home/Home\";\n\nconst Router = () => {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        {/* <Route\n          exact\n          path=\"/\"\n          component={() => <Redirect to=\"/index.html?id=5\" />}\n        /> */}\n        {/* <Route */}\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default Router;\n","import React from \"react\";\nimport { Layout, Menu } from \"antd\";\nimport Router from \"Router\";\nimport \"antd/dist/antd.css\";\n\nconst { Header, Sider, Content } = Layout;\n\nconst AppLayout = () => {\n  return (\n    <Layout>\n      <Header\n        className=\"header\"\n        // style={{ position: \"fixed\", zIndex: 1, width: \"100%\" }}\n      >\n        <div className=\"logo\" />\n        Header\n      </Header>\n      <Layout className=\"site-layout\">\n        <Sider\n          width={200}\n          className=\"site-layout-background\"\n          style={{\n            overflow: \"auto\",\n            height: \"calc(100vh - 64px)\",\n            // marginTop: '64px',\n            position: \"fixed\",\n            bottom: 0,\n            left: 0,\n          }}\n        >\n          <Menu\n            mode=\"inline\"\n            defaultSelectedKeys={[\"1\"]}\n            defaultOpenKeys={[\"sub1\"]}\n            // style={{ height: \"100%\", borderRight: 0 }}\n          >\n            <Menu.Item key=\"1\">Моніторинг</Menu.Item>\n            <Menu.Item key=\"2\">Відеотрансляція</Menu.Item>\n            <Menu.Item key=\"3\">Медіафайли</Menu.Item>\n            <Menu.Item key=\"4\">Налаштування</Menu.Item>\n          </Menu>\n        </Sider>\n\n        <Layout style={{ padding: \"0 24px 24px\", marginLeft: '200px' }}>\n          <Content\n            className=\"site-layout-background\"\n            style={{\n              padding: 24,\n              margin: 0,\n              // minHeight: 280,\n            }}\n          >\n            <Router />\n          </Content>\n        </Layout>\n      </Layout>\n    </Layout>\n  );\n};\n\nexport default AppLayout;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import AppLayout from \"AppLayout\";\nimport GlobalContext from \"context/GlobalContextComponent\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import \"./index.css\";\nimport Router from \"Router\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalContext>\n      <AppLayout />\n    </GlobalContext>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}